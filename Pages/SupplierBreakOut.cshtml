@page "/pages/supplier"
@model SupplierPageModel

<div class="m-2">
    <h5 class="bg-secondary text-white text-center m-2">New Supplier</h5>
    <form asp-page="SupplierBreakOut" method="post">
        <div class="form-group">
            <label asp-for="Supplier.Name"></label>
            <input class="form-control" asp-for="Supplier.Name"/>
        </div>
        <div class="form-group">
            <label asp-for="Supplier.City"></label>
            <input asp-for="Supplier.City" class="form-control" />
        </div>
        <button type="submit" class="btn btn-secondary">Create</button>
        <a class="btn btn-outline-secondary" asp-page="@Model.ReturnPage" asp-route-id="@Model.ProductId">Cancel</a>
    </form>
</div>

@functions{
    public class SupplierPageModel : PageModel
    {
        private DataContext context;
        public SupplierPageModel( DataContext ctx)
        {
            context = ctx;
        }
        [BindProperty]
        public Supplier Supplier { get; set; }
        public string ReturnPage { get; set; }
        public string ProductId { get; set; }

        public void OnGet([FromQuery(Name="Product")] Product product, string returnPage )
        {
            TempData["product"] = JsonSerializer.Serialize(product);
            TempData["returnAction"] = ReturnPage = returnPage;
            TempData["productId"] = ProductId = product.ProductId.ToString();
        }

        public async Task<IActionResult> OnPostAsync()
        {
            context.Suppliers.Add(Supplier);
            await context.SaveChangesAsync();
            Product product = JsonSerializer.Deserialize<Product>(TempData["product"] as string);
            product.SupplierId = Supplier.SupplierId;
            TempData["product"] = JsonSerializer.Serialize(product);
            string id = TempData["productId"] as string;
            return RedirectToPage(TempData["returnAction"] as string, new { id = id });
        }
    }
}